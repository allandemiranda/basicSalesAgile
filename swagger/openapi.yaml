openapi: "3.0.3"
info:  
  version: "0.2.1"
  title: "Front-end Technical Exercise"
  contact:
    email: "allandemiranda@gmail.com"
servers:
  - url: https://localhost:5000/api
tags:
- name: "user"
  description: "Users from the system"
- name: "sale"
  description: "Sales from the Users"
- name: "product"
  description: "Products to sales"
paths:
  /user:
    post:  
      tags:
        - "user"
      summary: "Create user"          
      requestBody: 
        required: true       
        description: ""
        content: 
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: "string"
                  description: "Full name"
                phone:
                  type: "string"
                  description: "Phone number"
                user_name:
                  type: "string"
                  description: "Login name"
                password:
                  type: "string"
                  description: "Password user"
              required:
                - name
                - phone
                - user_name
                - password     
      responses:
        '201':
          description: "A user object."
          content:
            application/json:
              schema:
                $ref: "##/components/schemas/User"
        '500':
          description: "Server error"
        default:
          description: "Unexpected error"   

  /user/{user_id}/sales/:
    get:
      tags:
        - "user"
      summary: "Get sales from user" 
      description: ""
      parameters:
        - name: userId
          in: path          
          required: true
          description: The ID of the user to return
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: "A sales arry."
          content:
            application/json:
              schema:    
                type: object
                properties:
                  sales:
                    type: array
                    items:
                      $ref: "#/components/schemas/Sale"
        '500':
          description: "Server error"
        default:
          description: "Unexpected error" 
      security:
       - bearerAuth: []
  
components:
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int"
        name:
          type: "string"
          description: "Full name"
        phone:
          type: "string"
          description: "Phone number"
        user_name:
          type: "string"
          description: "Login name"
        password:
          type: "string"
          description: "Password user"
      xml:
        name: "User"
    Sale:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int"
        product_id:
          type: "integer"
          format: "int"
          description: "ID from Product"
        quantity:
          type: "integer"
          format: "int"
          description: "Quantity of products bought"
        total:
          type: "number"
          format: "float"
          description: "Total bought"
        date:
          type: "string"
          description: "Date bought"
        user_id:
          type: "integer"
          format: "int"
          description: "ID from User bought"
      xml:
        name: "Sale" 
    Product:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int"        
        name:
          type: "string"
          description: "name of product"
        value:
          type: "number"
          format: "float"
          description: "Value of product"
      xml:
        name: "Product" 
